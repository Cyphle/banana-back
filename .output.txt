warning: unused import: `schema::*`
 --> migration/src/m20220101_000001_create_table.rs:1:37
  |
1 | use sea_orm_migration::{prelude::*, schema::*};
  |                                     ^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default
warning: unused import: `schema::*`
 --> migration/src/m20250120_145042_create_account_tables.rs:1:37
  |
1 | use sea_orm_migration::{prelude::*, schema::*};
  |                                     ^^^^^^^^^
warning: unused imports: `Key` and `time`
 --> src/main.rs:1:25
  |
1 | use actix_web::cookie::{time, Key};
  |                         ^^^^  ^^^
  |
  = note: `#[warn(unused_imports)]` on by default
warning: unused imports: `App`, `HttpResponse`, `HttpServer`, `Responder`, `get`, and `web`
 --> src/main.rs:2:17
  |
2 | use actix_web::{get, web, App, HttpResponse, HttpServer, Responder};
  |                 ^^^  ^^^  ^^^  ^^^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^^
warning: unused imports: `Client`, `Options`, `StandardClaims`, and `Token`
 --> src/main.rs:4:14
  |
4 | use openid::{Client, Options, StandardClaims, Token};
  |              ^^^^^^  ^^^^^^^  ^^^^^^^^^^^^^^  ^^^^^
warning: unused import: `Serialize`
 --> src/main.rs:5:26
  |
5 | use serde::{Deserialize, Serialize};
  |                          ^^^^^^^^^
warning: unused import: `actix_session::storage::CookieSessionStore`
  --> src/config/actix.rs:21:5
   |
21 | use actix_session::storage::CookieSessionStore;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
warning: unused import: `crate::domain::profile::Profile`
 --> src/domain/account.rs:2:5
  |
2 | use crate::domain::profile::Profile;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
warning: unused import: `crate::domain::profile::CreateProfileCommand`
 --> src/http/controllers/profile.rs:2:5
  |
2 | use crate::domain::profile::CreateProfileCommand;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
warning: unused import: `crate::repositories`
 --> src/http/controllers/profile.rs:4:5
  |
4 | use crate::repositories;
  |     ^^^^^^^^^^^^^^^^^^^
warning: unused import: `post`
 --> src/http/controllers/profile.rs:7:22
  |
7 | use actix_web::{get, post, web, HttpResponse, Responder};
  |                      ^^^^
warning: unused import: `Client`
 --> src/http/controllers/example_actix_store.rs:3:22
  |
3 | use openid::{Bearer, Client, Token};
  |                      ^^^^^^
warning: unused imports: `Client`, `StandardClaims`, `TokenIntrospection`, and `Token`
 --> src/http/controllers/example_actix_session.rs:4:22
  |
4 | use openid::{Bearer, Client, StandardClaims, Token, TokenIntrospection};
  |                      ^^^^^^  ^^^^^^^^^^^^^^  ^^^^^  ^^^^^^^^^^^^^^^^^^
warning: unused import: `crate::security::controllers::logout::logout`
 --> src/http/controllers/example_actix_session.rs:8:5
  |
8 | use crate::security::controllers::logout::logout;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
warning: unused import: `get_username_from_bearer`
 --> src/http/controllers/example_actix_session.rs:9:30
  |
9 | use crate::security::token::{get_username_from_bearer};
  |                              ^^^^^^^^^^^^^^^^^^^^^^^^
warning: unused import: `actix_session::SessionGetError`
 --> src/security/token.rs:2:5
  |
2 | use actix_session::SessionGetError;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
warning: unused import: `openid::error::Error`
 --> src/security/token.rs:4:5
  |
4 | use openid::error::Error;
  |     ^^^^^^^^^^^^^^^^^^^^
warning: unused imports: `IdToken` and `Userinfo`
 --> src/security/token.rs:6:51
  |
6 |     Bearer, Client, Discovered, DiscoveredClient, IdToken, StandardClaims...
  |                                                   ^^^^^^^
7 |     TokenIntrospection, Userinfo,
  |                         ^^^^^^^^
warning: unused imports: `StandardClaims` and `TokenIntrospection`
 --> src/security/controllers/login.rs:9:23
  |
9 | use openid::{Options, StandardClaims, Token, TokenIntrospection};
  |                       ^^^^^^^^^^^^^^         ^^^^^^^^^^^^^^^^^^
warning: unused import: `debug`
 --> src/security/controllers/logout.rs:4:11
  |
4 | use log::{debug, error, info};
  |           ^^^^^
warning: unused import: `get`
 --> src/security/controllers/register.rs:7:17
  |
7 | use actix_web::{get, post, web, HttpResponse, Responder};
  |                 ^^^
warning: unused imports: `Client`, `Discovered`, and `StandardClaims`
 --> src/security/controllers/register.rs:9:14
  |
9 | use openid::{Client, Discovered, StandardClaims};
  |              ^^^^^^  ^^^^^^^^^^  ^^^^^^^^^^^^^^
warning: unused import: `Deserialize`
  --> src/security/controllers/register.rs:11:13
   |
11 | use serde::{Deserialize, Serialize};
   |             ^^^^^^^^^^^
warning: unused import: `std::error::Error`
  --> src/security/controllers/register.rs:12:5
   |
12 | use std::error::Error;
   |     ^^^^^^^^^^^^^^^^^
warning: unused import: `sea_orm::EntityTrait`
   --> src/repositories/profile.rs:103:13
    |
103 |         use sea_orm::EntityTrait;
    |             ^^^^^^^^^^^^^^^^^^^^
warning: unused import: `entity::*`
   --> src/repositories/profile.rs:258:33
    |
258 |             entity::prelude::*, entity::*,
    |                                 ^^^^^^^^^
warning: unused import: `sea_orm::prelude::*`
  --> src/repositories/account.rs:73:13
   |
73 |         use sea_orm::prelude::*;
   |             ^^^^^^^^^^^^^^^^^^^
warning: unused variable: `store`
  --> src/http/controllers/example_actix_store.rs:15:13
   |
15 |     let mut store = data.store.lock().unwrap();
   |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_store`
   |
   = note: `#[warn(unused_variables)]` on by default
warning: variable does not need to be mutable
  --> src/http/controllers/example_actix_store.rs:15:9
   |
15 |     let mut store = data.store.lock().unwrap();
   |         ----^^^^^
   |         |
   |         help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default
warning: unused variable: `client`
  --> src/http/controllers/example_actix_session.rs:18:9
   |
18 |     let client = state.oidc_client.as_ref().unwrap().lock().unwrap();
   |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_client`
warning: unused variable: `state`
  --> src/http/controllers/example_actix_session.rs:71:5
   |
71 |     state: web::Data<AppState>,
   |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`
warning: unused variable: `e`
  --> src/http/controllers/account.rs:76:13
   |
76 |         Err(e) => {
   |             ^ help: if this is intentional, prefix it with an underscore: `_e`
warning: unused variable: `e`
   --> src/http/controllers/account.rs:110:13
    |
110 |         Err(e) => {
    |             ^ help: if this is intentional, prefix it with an underscore: `_e`
warning: fields `session_state` and `iss` are never read
  --> src/main.rs:17:5
   |
15 | struct AuthRequest {
   |        ----------- fields in this struct
16 |     code: Option<String>,
17 |     session_state: Option<String>,
   |     ^^^^^^^^^^^^^
18 |     iss: Option<String>,
   |     ^^^
   |
   = note: `AuthRequest` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default
warning: multiple fields are never read
  --> src/config/app_config.rs:9:9
   |
6  | pub struct DatabaseConfig {
   |            -------------- fields in this struct
...
9  |     pub schema: String,
   |         ^^^^^^
10 |     pub username: String,
   |         ^^^^^^^^
11 |     pub password: String,
   |         ^^^^^^^^
12 |     pub max_connections: u32,
   |         ^^^^^^^^^^^^^^^
13 |     pub min_connections: u32,
   |         ^^^^^^^^^^^^^^^
14 |     pub connect_timeout: u64,
   |         ^^^^^^^^^^^^^^^
15 |     pub acquire_timeout: u64,
   |         ^^^^^^^^^^^^^^^
16 |     pub idle_timeout: u64,
   |         ^^^^^^^^^^^^
17 |     pub max_lifetime: u64,
   |         ^^^^^^^^^^^^
18 |     pub sqlx_logging: bool,
   |         ^^^^^^^^^^^^
   |
   = note: `DatabaseConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis
warning: fields `client_id`, `client_secret`, and `create_user_url` are never read
  --> src/config/app_config.rs:23:9
   |
22 | pub struct OidcAdminConfig {
   |            --------------- fields in this struct
23 |     pub client_id: String,
   |         ^^^^^^^^^
24 |     pub client_secret: String,
   |         ^^^^^^^^^^^^^
25 |     pub create_user_url: String,
   |         ^^^^^^^^^^^^^^^
   |
   = note: `OidcAdminConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis
warning: multiple fields are never read
  --> src/config/app_config.rs:30:9
   |
29 | pub struct OidcConfig {
   |            ---------- fields in this struct
30 |     pub realm_url: String,
   |         ^^^^^^^^^
31 |     pub realm: String,
32 |     pub client_secret: String,
   |         ^^^^^^^^^^^^^
33 |     pub login_url: String,
   |         ^^^^^^^^^
34 |     pub nonce: String,
   |         ^^^^^
35 |     pub session_timeout_minutes: i64,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
36 |     pub base_url: String,
   |         ^^^^^^^^
37 |     pub admin: OidcAdminConfig,
   |         ^^^^^
   |
   = note: `OidcConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis
warning: fields `store_addr` and `session_ttl_days` are never read
  --> src/config/app_config.rs:42:9
   |
41 | pub struct SessionConfig {
   |            ------------- fields in this struct
42 |     pub store_addr: String,
   |         ^^^^^^^^^^
43 |     pub cookie_name: String,
44 |     pub session_ttl_days: u64,
   |         ^^^^^^^^^^^^^^^^
   |
   = note: `SessionConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis
warning: fields `allowed_origin`, `allowed_methods`, `allowed_headers`, `supports_credentials`, and `max_age` are never read
  --> src/config/app_config.rs:49:9
   |
48 | pub struct CorsConfig {
   |            ---------- fields in this struct
49 |     pub allowed_origin: String,
   |         ^^^^^^^^^^^^^^
50 |     pub allowed_methods: Vec<String>,
   |         ^^^^^^^^^^^^^^^
51 |     pub allowed_headers: Vec<String>,
   |         ^^^^^^^^^^^^^^^
52 |     pub supports_credentials: bool,
   |         ^^^^^^^^^^^^^^^^^^^^
53 |     pub max_age: u64,
   |         ^^^^^^^
   |
   = note: `CorsConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis
warning: fields `cors` and `logging` are never read
  --> src/config/app_config.rs:62:9
   |
57 | pub struct AppConfig {
   |            --------- fields in this struct
...
62 |     pub cors: CorsConfig,
   |         ^^^^
63 |     pub logging: LoggingConfig,
   |         ^^^^^^^
   |
   = note: `AppConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis
warning: field `level` is never read
  --> src/config/app_config.rs:74:9
   |
73 | pub struct LoggingConfig {
   |            ------------- field in this struct
74 |     pub level: String,
   |         ^^^^^
   |
   = note: `LoggingConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis
warning: methods `database_url` and `session_ttl_duration` are never used
  --> src/config/app_config.rs:88:12
   |
77 | impl AppConfig {
   | -------------- methods in this implementation
...
88 |     pub fn database_url(&self) -> String {
   |            ^^^^^^^^^^^^
...
99 |     pub fn session_ttl_duration(&self) -> Duration {
   |            ^^^^^^^^^^^^^^^^^^^^
warning: constant `USER_SESSION_KEY` is never used
   --> src/config/app_config.rs:105:11
    |
105 | pub const USER_SESSION_KEY: &str = "user_session";
    |           ^^^^^^^^^^^^^^^^
warning: function `save_in_shared_state` is never used
  --> src/http/controllers/example_actix_store.rs:31:4
   |
31 | fn save_in_shared_state(state: &Data<AppState>, token: Token) {
   |    ^^^^^^^^^^^^^^^^^^^^
warning: function `find_one_by_id` is never used
  --> src/repositories/profile.rs:27:14
   |
27 | pub async fn find_one_by_id(db_connexion: &DatabaseConnection, id: i32) ...
   |              ^^^^^^^^^^^^^^
warning: fields `token_type` and `expires_in` are never read
  --> src/security/token.rs:58:5
   |
56 | struct TokenResponse {
   |        ------------- fields in this struct
57 |     access_token: String,
58 |     token_type: String,
   |     ^^^^^^^^^^
59 |     expires_in: u64,
   |     ^^^^^^^^^^
warning: unused `Result` that must be used
  --> src/http/controllers/account.rs:36:21
   |
36 |                     create(&state.db_connection, &command).await;
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: `#[warn(unused_must_use)]` on by default
help: use `let _ = ...` to ignore the resulting value
   |
36 |                     let _ = create(&state.db_connection, &command).await;
   |                     +++++++
error[E0308]: mismatched types
   --> src/repositories/account.rs:219:39
    |
219 |             let created = create(&db, command).await?;
    |                           ------      ^^^^^^^ expected `&CreateAccountCommand`, found `CreateAccountCommand`
    |                           |
    |                           arguments to this function are incorrect
    |
note: function defined here
   --> src/repositories/account.rs:8:14
    |
8   | pub async fn create(
    |              ^^^^^^
9   |     db_connexion: &DatabaseConnection,
10  |     command: &CreateAccountCommand,
    |     ------------------------------
help: consider borrowing here
    |
219 |             let created = create(&db, &command).await?;
    |                                       +
For more information about this error, try `rustc --explain E0308`.
error: could not compile `banana-back-rs` (bin "banana-back-rs" test) due to 1 previous error; 31 warnings emitted
